process {

  // Global cluster parameters

  cpus = 1
  memory = 4.GB
  time = 1.h

  errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'

  withName:FlyeLarge {
        cpus = 32
        memory = 2900.GB
        time = { check_max(240.h * task.attempt, 'time') }
  }
  withName: 'Canu|Hifiasm|Flye|IPA' {
	cpus = 24
        memory = { 240.GB * task.attempt }
        time = { check_max(120.h * task.attempt, 'time') }
  }
  
  withName:BamToFastq {
        cpus = { check_max(2, 'cpus') }
        memory = { check_max(8.GB * task.attempt, 'memory') }
        time = { check_max(48.h * task.attempt, 'time') }
  }

  withName:BamToCCS {
        cpus = { check_max(16, 'cpus') }
        memory = { check_max(16.GB * task.attempt, 'memory') }
        time = { check_max(120.h * task.attempt, 'time') }
  }
  withName: CcsMerge {
        cpus = { check_max(8, 'cpus') }
        memory = { check_max(64.GB * task.attempt, 'memory') }
        time = { check_max(48.h * task.attempt, 'time') }
  }

  withName: nanoQC {
	cpus = { check_max(2, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(96.h * task.attempt, 'time') }
  }

  withName: nanoPlot {
        cpus = { check_max(2, 'cpus') }
        memory = { check_max(16.GB * task.attempt, 'memory') }
        time = { check_max(72.h * task.attempt, 'time') }
  }

  withName: KatGCP {
	cpus = { check_max(8, 'cpus') }
        memory = { check_max(16.GB * task.attempt, 'memory') }
        time = { check_max(72.h * task.attempt, 'time') }
  }

  withName: Quast {
	cpus = { check_max(8, 'cpus') }
        memory = { check_max(16.GB * task.attempt, 'memory') }
        time = { check_max(24.h * task.attempt, 'time') }
  }

  withName: Minimap {
	cpus = { check_max(8, 'cpus') }
        memory = { check_max(16.GB * task.attempt, 'memory') }
        time = { check_max(24.h * task.attempt, 'time') }
  }
  
  withName: runFastp {
	cpus = { check_max(4, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(4.h * task.attempt, 'time') }
  }

  withLabel: map {
	container = "docker://ikmb/esga:latest"
  }

  withLabel: quast {
	container = "docker://quay.io/biocontainers/quast:5.0.2--1"
  }

  withLabel: pacbio {
	container = "ikmb/pacbio-preprocess:1.0"
  }

  withLabel: flye {
	container = "docker://quay.io/biocontainers/flye:2.9--py27h6a42192_0"
  }

  withLabel: ipa {
	container = "docker://quay.io/biocontainers/pbipa:1.3.2--hee625c5_0"
  }

  withLabel: samtools {
	container = "docker://quay.io/biocontainers/samtools:1.10--h9402c20_2"
  }
 
  withLabel: nanoqc {
	container = "docker://quay.io/biocontainers/nanoqc:0.9.4--py_0"
  }

  withLabel: gaas {
	container = "docker://quay.io/biocontainers/gaas:1.2.0--pl526r35_0"
  }

  withLabel: kat {
	container = "docker://quay.io/biocontainers/kat:2.4.2--py36he1b856b_0"
  }

  withLabel: nanoplot {
	container = "docker://quay.io/biocontainers/nanoplot:1.30.1--py_0"
  }
  withLabel: fastp {
	container = "docker://quay.io/biocontainers/fastp:0.20.1--h8b12597_0"
  }

  withLabel: busco {
	conda = "busco=4.0.6"
  }

  withLabel: canu {
	container = "docker://quay.io/biocontainers/canu:2.2--ha47f30e_0"	
  }

  withLabel: hifiasm {
	container = "docker://quay.io/biocontainers/hifiasm:0.16.1--h2e03b76_0"
  }
}
